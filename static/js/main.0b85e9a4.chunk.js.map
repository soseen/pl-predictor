{"version":3,"sources":["context/userContext.tsx","context/fetchingContext.tsx","context/currentFixturesContext.tsx","components/Header/header.styles.ts","img/predictor-logo.png","components/Header/header.tsx","components/AppContent/app-content.styles.ts","context/playersContext.tsx","context/teamsContext.tsx","components/Fixtures/fixtures.styles.ts","components/Match/match.styles.ts","components/Match/match.tsx","axios/axios.ts","components/Fixtures/fixtures.tsx","components/Standings/standings.styles.ts","components/UserPredictionsModal/user-predictions-modal.styles.ts","components/UserPredictionsModal/user-predictions-modal.tsx","components/StandingsModal/standings-modal.styles.ts","components/StandingsModal/standings-modal.tsx","components/Standings/standings.tsx","components/AppContent/app-content.tsx","components/LogInModal/log-in-modal.styles.ts","components/LogInModal/log-in-modal.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Actions","UserRole","userReducer","state","action","type","setUser","user","payload","UserContext","createContext","UserDispatchContext","UserProvider","children","useReducer","dispatch","Provider","value","fetchingReducer","setIsFetching","isFetchingContext","setIsFetchingContext","FetchingProvider","makeStyles","palette","breakpoints","header","boxSizing","width","position","top","left","color","zIndex","navigation","padding","display","alignItems","justifyContent","backgroundColor","down","navigationFilled","borderBottom","secondary","dark","loader","logo","height","marginRight","username","button","main","textTransform","fontWeight","fontSize","Header","setIsModalOpen","classes","useStyles","userState","useContext","dispatchUser","loading","useState","isHeaderFilled","setIsHeaderFilled","handleWindowScroll","window","scrollY","useEffect","document","addEventListener","removeEventListener","className","classNames","src","Typography","variant","Button","onClick","undefined","localStorage","setItem","JSON","stringify","isOpen","target","container","marginTop","boxShadow","minHeight","flexDirection","up","margin","maxWidth","error","borderRadius","mainContent","flexWrap","rulesContainer","rulesTitle","textAlign","rulesList","listStyle","marginBlockStart","marginBlockEnd","paddingInlineStart","rule","marginBottom","flexShrink","content","ruleText","accent","accentGreen","accentBlue","fixturesReducer","setFixtures","fixtures","setPrediction","map","fixture","id","setBoostedPrediction","isBoosted","PlayerActions","CurrentFixturesContext","CurrentFixturesDispatchContext","CurrentFixturesProvider","TeamsContext","flexBasis","messageContainer","table","titleContainer","light","gameweekSelect","tableButtons","changeGameweekButton","marginLeft","minWidth","tableName","row","submitButton","label","formControl","select","customSelectMenu","rowSubmitted","rowExactScore","rowCorrectScore","rowIncorrectScore","bonusButton","boostIcon","bonusButtonPressed","teamName","flex","nameText","scoreInputs","scoreInput","outline","border","cursor","span","crest","objectFit","background","strokeOpacity","fill","fillOpacity","Match","teams","dispatchFixture","fixtureToDisplay","homeTeam","crestUrl","find","t","awayTeam","Box","isSubmited","title","alt","name","substring","length","disabled","prediction","homeTeamScore","onChange","e","maxLength","awayTeamScore","style","axios","Axios","create","baseURL","timeout","headers","Fixtures","currentMatchday","matchdayNumber","seasonId","fetchData","currentFixtures","dispatchFixtures","setFetching","isBoostUsedAlready","matchdayValues","useMemo","values","i","submitPredictions","a","FetchAction","post","gameweek","UserId","newGameweekResponse","promises","predictionsToPublish","filter","isResolved","forEach","push","GameweekPredictionId","data","catch","err","console","log","fixturesToDispatch","Promise","all","selectValue","NativeSelect","parseInt","selectMenu","inputProps","matchday","flexGrow","tableContainer","tableLayout","tableRow","tableHeadRow","userLink","showMore","openTableModal","dialogMain","userPredictions","maxHeight","overflowY","scoreWrapper","rowBoosted","textOverflow","whiteSpace","overflow","score","exactScore","correctScore","incorrectScore","points","UserPredictionsModal","setIsOpen","player","setUserPredictions","getUserPredictions","userPredictionsResponse","predictions","gameweekData","pointsAcquired","matchPredictions","reduce","sort","b","Dialog","paper","open","onClose","component","team","homeTeamName","isExactScore","isCorrectScore","awayTeamName","StandingsModal","standings","TableContainer","Table","TableHead","TableRow","TableCell","size","align","TableBody","index","noWrap","playersReducer","PlayersContext","PlayersDispatchContext","PlayersProvider","Standings","isFetching","players","dispatchPlayers","isStandingsOpen","setIsStandingsOpen","setPlayer","getPlayers","get","usersResponse","users","updateStandings","currentDate","format","Date","fetch","mode","matchResultsResponse","json","matchResults","gameweekPredictionsResponse","gameweekPredictions","userGameweek","predictionsToResolve","matchResult","matches","match","matchId","amplifierValue","predictionToUpdate","fullTime","put","handleUserPredictions","tabIndex","role","slice","colSpan","AppContent","currentFixturesDispatch","setMatchdayNumber","setCurrentMatchday","setSeasonId","setTeams","setError","teamsProvider","parse","getItem","UserAction","useCallback","matchdayValue","FetchingAction","matchdayToDisplay","scheduledMatchesResponse","scheduledMatchesData","currentMatchesResponse","currentMatchesData","m","season","userGameweekPredictionsResponse","status","teamsResponse","teamsData","modal","modalContent","validationMessage","contrastText","inputContainer","input","LogInModal","isModalOpen","login","password","credentials","setCredentials","setValidationMessage","handleClose","validateForm","Object","some","handleRegister","newUserResponse","message","handleLogIn","userResponse","theme","createMuiTheme","primary","typography","fontFamily","join","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b85e9a4.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { createContext, useReducer, Dispatch } from \"react\";\n\nexport type User = {\n    id: number,\n    username: string,\n    role: UserRole,\n    points: number,\n    isActive: boolean\n}\n\ntype State = {\n    user?: User\n}\n\ntype Action = {\n    type: Actions,\n    payload: User | undefined\n}\n\nexport enum Actions {\n    setUser = \"SetUser\"\n}\n\nenum UserRole {\n    user = \"User\",\n    admin = \"Admin\"\n}\n\nfunction userReducer(state: State, action: Action): State {\n    switch(action.type) {\n        case Actions.setUser: {\n            return {...state, user: action.payload}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const UserContext = createContext<State | null>(null);\nexport const UserDispatchContext = createContext<Dispatch<Action>>(() => {})\n\nconst UserProvider: React.FC = ({ children }) => {\n    const [state, dispatch] = useReducer(userReducer, {});\n\n    return (\n        <UserContext.Provider value={state}>\n            <UserDispatchContext.Provider value={dispatch}>\n                {children}\n            </UserDispatchContext.Provider>\n        </UserContext.Provider>\n    )\n}\n\n\nexport default UserProvider;","import React, { createContext, useReducer, Dispatch } from \"react\";\n\n\ntype Action = {\n    type: Actions,\n    payload: boolean\n}\n\nexport enum Actions {\n    setIsFetching = \"SetIsFetching\",\n}\n\nfunction fetchingReducer(state: boolean, action: Action): boolean {\n    switch(action.type) {\n        case Actions.setIsFetching: {\n            return action.payload\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const isFetchingContext = createContext<boolean>(false);\nexport const setIsFetchingContext = createContext<Dispatch<Action>>(() => null);\n\nconst FetchingProvider: React.FC = ({ children }) => {\n    const [state, dispatch] = useReducer(fetchingReducer, false);\n\n    return(\n        <isFetchingContext.Provider value={state}>\n            <setIsFetchingContext.Provider value={dispatch}>\n                { children }\n            </setIsFetchingContext.Provider>\n        </isFetchingContext.Provider>\n    )\n}\n\nexport default FetchingProvider;\n\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { createContext, useReducer, Dispatch } from \"react\";\n\nimport { Fixture } from '../components/AppContent/app-content'\n\ntype State = {\n    fixtures?: Fixture[]\n}\n\ntype Action = {\n    type: Actions,\n    payload: any\n}\n\nexport enum Actions {\n    setFixtures = \"SetFixtures\",\n    setPrediction = \"setPrediction\",\n    setBoostedPrediction = \"setBoostedPrediction\"\n}\n\nfunction fixturesReducer(state: State, action: Action): State {\n    switch(action.type) {\n        case Actions.setFixtures: {\n            return {...state, fixtures: action.payload}\n        }\n        case Actions.setPrediction: {\n            return {...state, fixtures: state.fixtures?.map((fixture) => (\n                fixture.id === action.payload.id ? action.payload : fixture\n            ))}\n        }\n        case Actions.setBoostedPrediction: {\n            return {...state, fixtures: state.fixtures?.map((fixture) => (\n                fixture.id === action.payload.id ? {...fixture, isBoosted: true} : {...fixture, isBoosted: false}\n            ))}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const CurrentFixturesContext = createContext<State>({} as State);\nexport const CurrentFixturesDispatchContext = createContext<Dispatch<Action>>(() => {})\n\nconst CurrentFixturesProvider: React.FC = ({ children }) => {\n    const [state, dispatch] = useReducer(fixturesReducer, {});\n\n    return (\n        <CurrentFixturesContext.Provider value={state}>\n            <CurrentFixturesDispatchContext.Provider value={dispatch}>\n                {children}\n            </CurrentFixturesDispatchContext.Provider>\n        </CurrentFixturesContext.Provider>\n    )\n}\n\nexport default CurrentFixturesProvider;\n\n\n","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(({ palette, breakpoints }) => ({\n    header: {\n        boxSizing: 'border-box',\n        width: '100%',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        color: \"#fff\",\n        zIndex: 100,\n      },\n    navigation: {\n        padding: '20px',\n        boxSizing: 'border-box',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        backgroundColor: \"#00000099\",\n\n        [breakpoints.down(\"md\")]: {\n            padding: '10px',\n        },\n    },\n    navigationFilled: {\n        backgroundColor: \"#202020\",\n        borderBottom: `3px solid ${palette.secondary.dark}`,\n    },\n    loader: {\n        position: \"fixed\",\n        zIndex: 500,\n        top: \"80px\",\n        width: \"100%\",\n    },\n    logo: {\n        width: \"100px\",\n        height: \"auto\",\n        marginRight: \"auto\"\n    },\n    username: {\n        marginRight: \"10px\",\n\n        [breakpoints.down(\"md\")]: {\n            display: \"none\"\n        },\n        \n    },\n    button: {\n        backgroundColor: palette.secondary.main,\n        textTransform: 'capitalize',\n        fontWeight: 'bold',\n        marginRight: \"5px\",\n\n        [breakpoints.down(\"md\")]: {\n            fontSize: '0.7rem',\n            padding: \"5px 10px\",\n        },\n    }\n}));","export default __webpack_public_path__ + \"static/media/predictor-logo.5b405207.png\";","import { Button, Typography } from '@material-ui/core';\nimport React, { useContext, useState } from 'react';\nimport { Actions, UserContext, UserDispatchContext } from '../../context/userContext';\nimport GridLoader from \"react-spinners/GridLoader\";\nimport { isFetchingContext } from '../../context/fetchingContext';\nimport useStyles from './header.styles';\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport logo from '../../img/predictor-logo.png'\n\ntype Props = {\n    setIsModalOpen: (isModalOpen: {isOpen: boolean, target: string}) => void\n}\n\n\n\nconst Header: React.FC<Props> = ({setIsModalOpen}) => {\n\n    const classes = useStyles();\n    const userState = useContext(UserContext);\n    const dispatchUser = useContext(UserDispatchContext);\n    const loading = useContext(isFetchingContext);\n    const [isHeaderFilled, setIsHeaderFilled] = useState<boolean>(false)\n\n    const handleWindowScroll = () => {\n            if(window.scrollY > 50 ) {\n                setIsHeaderFilled(true)\n            } else {\n                setIsHeaderFilled(false)\n            }\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"scroll\", handleWindowScroll);\n\n        return () => {\n            document.removeEventListener(\"scroll\", handleWindowScroll);\n        }\n    }, [])\n\n    const handleLogOut = () => {\n        dispatchUser({type: Actions.setUser, payload: undefined});\n        localStorage.setItem('user', JSON.stringify(null));\n    }\n\n    return (\n        <>\n        <header className={classes.header}>\n            <div className={isHeaderFilled ? classNames(classes.navigation, classes.navigationFilled) : classes.navigation}>\n                <img src={logo} className={classes.logo} />\n                <Typography variant='body1' className={classes.username}>{userState?.user?.username}</Typography>\n                {userState?.user ? \n                    <Button variant=\"contained\" className={classes.button} onClick={handleLogOut}>Log Out</Button>\n                    :\n                    <Button variant=\"contained\" className={classes.button} onClick={() => setIsModalOpen({isOpen: true, target: 'log-in'})}>Log In</Button>\n                }\n                <Button variant=\"contained\" className={classes.button} onClick={() => setIsModalOpen({isOpen: true, target: 'register'})}>Register</Button>\n            </div>\n        </header>\n            <div className={classes.loader}>\n                <GridLoader loading={loading} color=\"#f88a62\" />\n            </div>\n        </>\n    );\n};\n\nexport default Header;","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(({ palette, breakpoints }) => ({\n    container: {\n        width: \"100%\",\n        marginTop: \"62px\",\n        padding: \"15px\",\n        boxSizing: \"border-box\",\n        boxShadow: \"2px 2px 10px 5px #00000090\",\n        backgroundColor: \"#2a2a2a\",\n        minHeight: \"400px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n\n        [breakpoints.up(\"md\")]: {\n            margin: '20px auto',\n            marginTop: \"110px\",\n            maxWidth: \"1100px\",\n        },\n    },\n    error: {\n        margin: \"auto\",\n        padding: \"20px\",\n        backgroundColor: palette.secondary.dark,\n        borderRadius: \"2px\",\n        boxShadow: \"2px 2px 15px 5px #00000060\"\n    },\n    mainContent: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n        flexWrap: \"wrap\",\n    },\n    rulesContainer: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        backgroundColor: \"#2f2f2f\",\n        padding: \"10px\",\n        borderRadius: \"2px\",\n    },\n    rulesTitle: {\n        textAlign: \"left\"\n    },\n    rulesList: {\n        width: \"100%\",\n        listStyle: \"none\",\n        textAlign: \"left\",\n        marginBlockStart: \"10px\",\n        marginBlockEnd: 0,\n        paddingInlineStart: 0\n    },\n    rule: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: \"5px\",\n        flexShrink: 0,\n        \n        \"&::before\": {\n            content: \"''\",\n            width: \"6px\",\n            height: \"6px\",\n            borderRadius: \"50%\",\n            marginRight: \"8px\",\n            flexShrink: 0,\n            backgroundColor: palette.secondary.main\n        }\n    },\n    ruleText: {\n        display: \"flex\",\n        alignItems: \"center\",\n\n        [breakpoints.down(\"md\")]: {\n            display: \"inline-block\"\n        },\n    },\n    accent: {\n        color: palette.secondary.main\n    },\n    accentGreen: {\n        backgroundColor: \"#39a350\",\n        padding: \"2px\",\n        borderRadius: \"2px\",\n    },\n    accentBlue: {\n        backgroundColor: \"#3c87b5\",\n        padding: \"2px\",\n        borderRadius: \"2px\",\n    }\n}));","import React, { createContext, useReducer, Dispatch } from \"react\";\nimport { User } from \"./userContext\";\n\nexport type Action = {\n    type: PlayerActions,\n    payload: User[]\n}\n\nexport enum PlayerActions {\n    setUser = \"SetPlayers\"\n}\n\nfunction playersReducer(state: User[], action: Action): User[] {\n    switch(action.type) {\n        case PlayerActions.setUser: {\n            return action.payload\n        }\n    }\n}\n\nexport const PlayersContext = createContext<User[]>([]);\nexport const PlayersDispatchContext = createContext<Dispatch<Action>>(() => null)\n\nconst PlayersProvider: React.FC = ({ children }) => {\n    const [state, dispatch] = useReducer(playersReducer, []);\n\n    return(\n        <PlayersContext.Provider value={state}>\n            <PlayersDispatchContext.Provider value={dispatch}>\n                {children}\n            </PlayersDispatchContext.Provider>\n        </PlayersContext.Provider>\n    )\n}\n\nexport default PlayersProvider;","import { createContext } from \"react\";\n\nimport { Team } from '../components/AppContent/app-content'\n\nexport const TeamsContext = createContext<Team[]>([]);","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(({ palette, breakpoints }) => ({\n    container: {\n        width: \"100%\",\n        textAlign: \"left\",\n        flexBasis: \"100%\",\n        display: \"flex\",\n        marginBottom: \"20px\",\n            \n        [breakpoints.up(\"md\")]: {\n            flexBasis: \"68%\"\n        },\n    },\n    messageContainer: {\n        width: \"100%\",\n        textAlign: \"center\",\n        flexBasis: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginBottom: \"20px\",\n        height: \"200px\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n\n    },\n    table: {\n        width: \"100%\",\n        margin: \"auto\",\n        borderRadius: \"2px\"\n    },\n    titleContainer: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        backgroundColor: palette.secondary.light,\n        padding: '10px',\n    },\n    gameweekSelect: {\n        color: \"#202020\",\n        fontSize: 14\n    },\n    tableButtons: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\"\n    },\n    changeGameweekButton: {\n        fontSize: 30,\n        padding: 5,\n        backgroundColor: palette.secondary.dark,\n        color: \"#fff\",\n        marginLeft: 5,\n        minWidth: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n\n        \"& svg\": {\n            width: \"0.8em\",\n            height: \"0.8em\"\n        },\n        \"&:hover\": {\n            backgroundColor: palette.secondary.main\n        },\n    },\n    tableName: {\n        backgroundColor: palette.secondary.dark,\n        textAlign: 'center',\n        padding: '10px',\n        borderRadius: '2px',\n        color: \"#fff\"\n    },\n    row: {\n        backgroundColor: \"#404010\"\n    },\n    button: {\n        backgroundColor: palette.secondary.light,\n        textTransform: 'capitalize',\n        fontWeight: 'bold',\n        padding: \"10px 50px\",\n        marginTop: \"10px\"\n    },\n    submitButton: {\n        marginTop: \"10px\",\n        backgroundColor: palette.secondary.dark,\n        width: \"100%\",\n        color: \"#fff\",\n        padding: \"10px\",\n\n        \"&:hover\": {\n            backgroundColor: palette.secondary.main\n        },\n    },\n    label: {\n        color: \"#fff\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginRight: \"8px\",\n        fontSize: \"0.8rem\",\n        flexWrap: \"nowrap\"\n    },\n    accent: {\n        color: palette.secondary.main,\n    },\n    formControl: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        margin: \"10px 0\",\n\n        [breakpoints.up(\"sm\")]: {\n            display: \"none\"\n        },\n    },\n    select: {\n        color: \"#000\",\n        backgroundColor: palette.secondary.main,\n        padding: \"5px\",\n        borderRadius: \"2px\",\n        fontSize: \"0.8rem\",\n        minWidth: 150\n    },\n    customSelectMenu: {\n        backgroundColor: palette.secondary.main\n    }\n}));","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette, breakpoints }) => ({\n    row: {\n        width: \"100%\",\n        display: 'flex',\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"10px\",\n        backgroundColor: \"#ffffff\",\n        position: 'relative',\n        borderBottom: `1px solid #e0e0e0`,\n    },\n    rowSubmitted: {\n        backgroundColor: palette.secondary.light,\n    },\n    rowExactScore: {\n        backgroundColor: \"#39a350\"\n    },\n    rowCorrectScore: {\n        backgroundColor: \"#3c87b5\"\n    },\n    rowIncorrectScore: {\n        backgroundColor: \"#c74c4c\"\n    },\n    bonusButton: {\n        display: \"none\",\n\n        \"&:hover\": {\n            backgroundColor: palette.secondary.dark\n        },\n\n        [breakpoints.up(\"sm\")]: {\n            display: \"flex\",\n            textTransform: \"capitalize\",\n            boxShadow: \"1px 1px 5px 1px #00000060\",\n            minWidth: \"0\",\n            backgroundColor: \"#4f4f4f\",\n            color: \"#fff\",\n            borderRadius: \"50%\",\n            padding: \"6px\",\n            marginRight: \"10px\",\n            fontSize: \"1rem\",\n          }\n    },\n    boostIcon: {\n        [breakpoints.down(\"sm\")]: {\n            width: \"0.7em\",\n            height: \"0.7em\",\n          }\n    },\n    bonusButtonPressed: {\n        backgroundColor: palette.secondary.main,\n    },\n    teamName: {\n        padding: \"10px\",\n        flex: 1,\n        color: \"#000\",\n    },\n    nameText: {\n        fontSize: \"0.75rem\",\n\n        [breakpoints.up(\"md\")]: {\n            fontSize: \"0.875rem\",\n          }\n    },\n    scoreInputs: {\n        // marginLeft: \"auto\",\n        // marginRight: \"auto\"\n    },\n    scoreInput: {\n        outline: 'none',\n        backgroundColor: \"#e0e0e0\",\n        width: \"25px\",\n        height: \"25px\",\n        border: 'none',\n        borderRadius: \"2px\",\n        margin: \"0 2px\",\n        textAlign: \"center\",\n        fontSize: \"0.8rem\",\n        cursor: \"pointer\",\n\n        [breakpoints.up(\"md\")]: {\n            fontSize: \"1.2rem\",\n            width: \"40px\",\n            height: \"40px\",\n          }\n    },\n    span: {\n        color: \"#000\"\n    },\n    crest: {\n        width: \"20px\",\n        height: \"20px\",\n        objectFit: \"contain\",\n        background: \"none\",\n        // border: `1px solid ${palette.secondary.main}`,\n        // padding: '2px',\n        strokeOpacity: 0,\n        fill: \"none\",\n        fillOpacity: 0.5,\n        display: \"none\",\n\n        \"&: > svg\": {\n            strokeOpacity: 0,\n            fill: \"none\",\n            fillOpacity: 0.5\n        },\n        [breakpoints.up(\"md\")]: {\n            display: \"block\",\n            width: \"30px\",\n            height: \"30px\"\n        }\n    }\n}));","import { Box, Typography, Button } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { Fixture } from '../AppContent/app-content'\nimport useStyles from './match.styles';\nimport { TeamsContext } from '../../context/teamsContext';\nimport { Actions, CurrentFixturesContext, CurrentFixturesDispatchContext } from '../../context/currentFixturesContext';\nimport classNames from 'classnames';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\n\ntype Props = {\n    fixture: Fixture\n}\n\n\nconst Match: React.FC<Props> = ({ fixture }) => {\n\n    const classes = useStyles();\n    const teams = useContext(TeamsContext);\n    const dispatchFixture = useContext(CurrentFixturesDispatchContext);\n    const fixtures = useContext(CurrentFixturesContext);\n    \n    const fixtureToDisplay: Fixture = {\n        ...fixture, \n        homeTeam: {...fixture.homeTeam, crestUrl: teams.find(t => t.id === fixture.homeTeam.id)?.crestUrl},\n        awayTeam: {...fixture.awayTeam, crestUrl: teams.find(t => t.id === fixture.awayTeam.id)?.crestUrl}\n    }\n\n    const handleBoostScoreClick = () => {\n        const isBoostUsedAlready = !!fixtures?.fixtures?.find(fixture => (fixture.isBoosted && fixture.isSubmited));\n        if(!isBoostUsedAlready && !fixture.isSubmited) {\n            dispatchFixture(\n                {\n                    type: Actions.setBoostedPrediction,\n                    payload: {\n                        id: fixture.id\n                    }\n                }\n            )\n        }\n    }\n\n    return (\n        <Box className={fixture.isSubmited ? classNames(classes.rowSubmitted, classes.row) :classes.row}>\n            <Button \n                className={fixture.isBoosted? classNames(classes.bonusButtonPressed, classes.bonusButton) : classes.bonusButton} \n                onClick={handleBoostScoreClick} \n                title=\"double points boost\">\n                    <FlashOnIcon className={classes.boostIcon}/>\n            </Button>\n            <img className={classes.crest} src={fixtureToDisplay.homeTeam.crestUrl} alt={fixtureToDisplay.homeTeam.name}></img>\n            <div className={classes.teamName}>\n                <Typography variant=\"body2\" className={classes.nameText}>{fixture.homeTeam.name.substring(0, fixture.homeTeam.name.length-3)}</Typography>\n            </div>\n            <div className={classes.scoreInputs}>\n                <input \n                    disabled={fixtureToDisplay.isSubmited}\n                    className={classes.scoreInput}\n                    type=\"text\"\n                    value={\n                        (fixtureToDisplay.prediction?.homeTeamScore || fixtureToDisplay.prediction?.homeTeamScore === 0) ? \n                            fixtureToDisplay.prediction?.homeTeamScore\n                            : \n                            ''\n                        } \n                    onChange={\n                        (e) => dispatchFixture(\n                            {\n                                type: Actions.setPrediction,\n                                payload: {\n                                    ...fixture,\n                                    prediction: {\n                                        ...fixture.prediction,\n                                        homeTeamScore: e.target.value\n                                    }\n                                }\n                            }\n                        )\n                    }\n                    maxLength={2}>\n                </input>\n                <span className={classes.span}> : </span>\n                <input \n                    disabled={fixtureToDisplay.isSubmited}\n                    className={classes.scoreInput}\n                    type=\"text\"\n                    value={\n                        (fixtureToDisplay.prediction?.awayTeamScore ||\n                        fixtureToDisplay.prediction?.awayTeamScore === 0)\n                        ?\n                        fixtureToDisplay.prediction?.awayTeamScore\n                        : ''\n                    }\n                    onChange={\n                        (e) => dispatchFixture(\n                            {\n                                type: Actions.setPrediction,\n                                payload: {\n                                    ...fixture,\n                                    prediction: {\n                                        ...fixture.prediction,\n                                        awayTeamScore: e.target.value\n                                    }\n                                }\n                            }\n                        )\n                    }\n                    maxLength={2}>\n                </input>\n            </div>\n            <div className={classes.teamName}>\n                <Typography variant=\"body2\" className={classes.nameText} style={{textAlign: \"right\"}}>{fixture.awayTeam.name.substring(0, fixture.awayTeam.name.length-3)}</Typography>\n            </div>\n            <img className={classes.crest} src={fixtureToDisplay.awayTeam.crestUrl} alt={fixtureToDisplay.awayTeam.name}></img>\n        </Box>\n    );\n};\n\nexport default Match;","import Axios from 'axios'\n\nexport const axios = Axios.create({\n    baseURL: \"https://pl-predictor-backend.herokuapp.com/\",\n    timeout: 3000,\n    headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n    }\n});","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useContext, ChangeEvent, useMemo } from 'react';\nimport { CurrentFixturesContext, CurrentFixturesDispatchContext, Actions } from '../../context/currentFixturesContext';\nimport { Actions as FetchAction } from '../../context/fetchingContext';\nimport useStyles from './fixtures.styles'\nimport { Button, Typography, NativeSelect } from '@material-ui/core';\nimport Match from '../Match/match';\nimport { UserContext } from '../../context/userContext';\nimport { axios } from '../../axios/axios';\nimport { setIsFetchingContext } from '../../context/fetchingContext';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\ntype Props = {\n    setIsModalOpen: (isModalOpen: {isOpen: boolean, target: string}) => void,\n    currentMatchday: number,\n    matchdayNumber: number,\n    seasonId?: number | null,\n    fetchData: (matchdayNumber: number | null) => void;\n}\n\nconst Fixtures: React.FC<Props> = ({setIsModalOpen, currentMatchday, matchdayNumber, seasonId, fetchData}) => {\n\n    const classes = useStyles();\n    const currentFixtures = useContext(CurrentFixturesContext);\n    const dispatchFixtures = useContext(CurrentFixturesDispatchContext);\n    const userState = useContext(UserContext);\n    const setFetching = useContext(setIsFetchingContext);\n    const isBoostUsedAlready = !!currentFixtures?.fixtures?.find(fixture => (fixture.isBoosted && fixture.isSubmited));\n\n    const matchdayValues = useMemo(() => {\n        let values: number[] = []\n        if(currentMatchday > 0){\n            for(let i = 1; i<= currentMatchday + 1; i++){\n                values = [...values, i];\n            }\n        }\n        return values;\n    }, [currentMatchday])\n\n    const submitPredictions = async () => {\n        setFetching({type: FetchAction.setIsFetching, payload: true});\n        try {\n            const newGameweekResponse = await axios.post('/gameweek', {\n                gameweek: matchdayNumber,\n                seasonId: seasonId,\n                UserId: userState?.user?.id\n            });\n\n            const promises: Promise<any>[] = [];\n\n            const predictionsToPublish = currentFixtures.fixtures?.\n            filter(fixture => (fixture.prediction.homeTeamScore && fixture.prediction.awayTeamScore) && !fixture.isResolved).\n            map(fixture => fixture.isBoosted ? {...fixture, isBoosted: true} : {...fixture, isBoosted: false});\n\n            predictionsToPublish?.forEach(fixture => {\n                promises.push(axios.post('/prediction', {...fixture, GameweekPredictionId: newGameweekResponse.data.gameweek[0].id}).catch(err => console.log(err)))\n            })\n\n            const fixturesToDispatch = currentFixtures.fixtures?.map((fixture) => {\n                const prediction = predictionsToPublish?.find(prediction => prediction.id === fixture.id );\n                if(prediction) {\n                    return {...fixture, \n                    prediction: {\n                        homeTeamScore: prediction.prediction.homeTeamScore, \n                        awayTeamScore: prediction.prediction.awayTeamScore\n                    },\n                    isSubmited: true,\n                    isResolved: false,\n                    isBoosted: prediction.isBoosted\n                    }\n                } else {\n                    return fixture\n                }\n            })\n            dispatchFixtures({type: Actions.setFixtures, payload: fixturesToDispatch});\n            await Promise.all(promises)\n        }\n        catch (error) {\n            console.log(error)\n        }\n        setFetching({type: FetchAction.setIsFetching, payload: false});\n    }\n\n    const handleGameweekSelectChange = ({ target }: ChangeEvent<HTMLSelectElement>) => {\n        fetchData(parseInt(target.value));\n    }\n\n    const handleSelectChange = ({ target }: ChangeEvent<HTMLSelectElement>) => {\n        const fixture = currentFixtures.fixtures?.find(fixture => fixture.id === parseInt(target.value));\n        if(!isBoostUsedAlready && !fixture?.isSubmited) {\n            dispatchFixtures(\n                {\n                    type: Actions.setBoostedPrediction,\n                    payload: {\n                        id: fixture?.id\n                    }\n                }\n            )\n        }\n    }\n\n    const selectValue = useMemo(() => {\n        const fixture = currentFixtures?.fixtures?.find(fixture => fixture.isBoosted)?.id;\n        return fixture ?? \"\";\n    },[currentFixtures.fixtures])\n\n    return (\n        <div className={classes.container}>\n            {userState?.user ? \n            <div className={classes.table}>\n                <Typography className={classes.tableName} variant='body1'>Gameweek {matchdayNumber}</Typography>\n                <div className={classes.titleContainer}>\n                <NativeSelect\n                    className={classes.select}\n                    value={matchdayNumber}\n                    onChange={handleGameweekSelectChange}\n                    classes={{ selectMenu : classes.customSelectMenu }}\n                    inputProps={{ className: classes.customSelectMenu}}\n                >   \n                    {matchdayValues.map(matchday => (\n                        <option className={classes.customSelectMenu} key={matchday} value={matchday}>\n                                {`Gameweek ${matchday}`}\n                        </option>\n                    ))}\n                </NativeSelect>\n                <div className={classes.tableButtons}>\n                <Button variant=\"contained\" className={classes.changeGameweekButton} onClick={() => fetchData(matchdayNumber - 1)}>\n                    <ArrowBackIosIcon />\n                </Button>\n                <Button variant=\"contained\" className={classes.changeGameweekButton} onClick={() => fetchData(matchdayNumber + 1)}>\n                    <ArrowForwardIosIcon />\n                </Button>\n                </div>\n                </div>\n                {currentFixtures.fixtures?.map((fixture) =>\n                (\n                    <Match key={fixture.id} fixture={fixture}/>\n                )\n                )}\n                <div className={classes.formControl}>\n                    <div className={classes.label}><span className={classes.accent}><FlashOnIcon/></span> Boost</div>\n                    <NativeSelect\n                        className={classes.select}\n                        value={selectValue}\n                        onChange={handleSelectChange}\n                        classes={{ selectMenu : classes.customSelectMenu }}\n                        inputProps={{ className: classes.customSelectMenu}}\n                        disabled={isBoostUsedAlready}\n                    >   \n                        <option value=\"\"></option>\n                        {currentFixtures.fixtures?.map(fixture => (\n                            <option className={classes.customSelectMenu} key={fixture.id} value={fixture.id} disabled={fixture.isSubmited}>\n                                    {`${fixture.homeTeam.name.substring(0, fixture.homeTeam.name.length-3)} - ${fixture.awayTeam.name.substring(0, fixture.awayTeam.name.length-3)}`}\n                            </option>\n                        ))}\n                    </NativeSelect>\n                </div>    \n                <Button variant=\"contained\" className={classes.submitButton} onClick={submitPredictions}>Submit</Button>\n            </div>\n            :\n            <div className={classes.messageContainer}>\n                <Typography variant='body1'>Log in to place your predictions...</Typography>\n                <Button variant=\"contained\" onClick={() => setIsModalOpen({isOpen: true, target: \"log-in\"})} className={classes.button}>Log In</Button>\n            </div>\n            }\n            \n        </div>\n    );\n};\n\nexport default Fixtures;","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(({ palette, breakpoints }) => ({\n    container: {\n        width: \"100%\",\n        textAlign: \"left\",\n        flexBasis: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginBottom: \"10px\",\n            \n        [breakpoints.up(\"md\")]: {\n            flexBasis: \"28%\",\n            flexGrow: 1,\n            marginLeft: \"10px\"\n        },\n    },\n    tableContainer: {\n        width: \"100%\",\n        margin: \"auto\",\n        borderRadius: \"2px\",\n        boxShadow: \"1px 1px 10px 3px #00000060\"\n    },\n    tableName: {\n        backgroundColor: palette.secondary.dark,\n        textAlign: 'center',\n        padding: '10px',\n        borderRadius: '2px',\n        color: \"#fff\"\n    },\n    table: {\n        width: \"100%\",\n        tableLayout: \"fixed\"\n    },\n    tableRow: {\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\",\n\n        \"&:hover\": {\n            backgroundColor: \"#e0e0e0\"\n        }\n    },\n    tableHeadRow: {\n        backgroundColor: palette.secondary.light,\n        fontWeight: \"bolder\",\n    },\n    button: {\n        width: \"100%\",\n        marginTop: \"10px\",\n        padding: \"10px\",\n        backgroundColor: palette.secondary.dark,\n        color: \"#fff\",\n\n        \"&:hover\": {\n            backgroundColor: palette.secondary.main\n        }\n    },\n    userLink: {\n        cursor: \"pointer\"\n    },\n    showMore: {\n        width: \"100%\",\n        margin: \"10px 0\",\n        color: \"#fff\",\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n    openTableModal: {\n        margin: \"auto\",\n        color: \"#fff\",\n        cursor: \"pointer\"\n    },\n}));","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(({ palette, breakpoints }) => ({\n    dialogMain: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: \"20px\",\n        alignItems: \"center\",\n        padding: \"5px\",\n        backgroundColor: palette.secondary.main,\n        color: \"#fff\",\n        boxSizing: \"border-box\",\n\n        [breakpoints.up(\"md\")]: {\n            minWidth: \"400px\"\n        },\n    },\n    username: {\n        width: \"100%\",\n        padding: \"10px\",\n        borderRadius: \"2px\",\n        backgroundColor: palette.secondary.dark,\n        textAlign: \"center\",\n        boxSizing: \"border-box\"\n    },\n    title: {\n        padding: \"10px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        color: \"#000\",\n    },\n    userPredictions: {\n        width: \"100%\",\n        marginTop: \"10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    tableContainer: {\n        width: \"100%\",\n        maxHeight: \"600px\",\n        overflowY: \"auto\",\n    },\n    table: {\n        width: \"100%\",\n        margin: \"auto\",\n        marginBottom: \"20px\",\n        borderRadius: \"2px\",\n        backgroundColor: palette.secondary.light\n    },\n    scoreWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    row: {\n        width: \"100%\",\n        display: 'flex',\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"5px 10px\",\n        backgroundColor: \"#ffffff\",\n        position: 'relative',\n        borderRadius: \"2px\",\n        borderBottom: `1px solid #e0e0e0`,\n        boxSizing: \"border-box\",\n\n        [breakpoints.down(\"md\")]: {\n            padding: \"2px\"\n        },\n    },\n    rowBoosted: {\n        backgroundColor: palette.secondary.dark,\n        borderBottom: `1px solid ${palette.secondary.main}`,\n    },\n    teamName: {\n        padding: \"10px\",\n        flex: 1,\n        color: \"#000\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n\n        \"& > :nth-child(2)\": {\n            textAlign: \"right\",\n            backgroundColor: \"red\"\n        },\n\n        [breakpoints.down(\"md\")]: {\n            fontSize: \"0.7rem\",\n            padding: \"8px 5px\"\n        },\n    },\n    name: {\n        [breakpoints.down(\"md\")]: {\n            fontSize: \"0.75rem\",\n        },\n    },\n    crest: {\n        width: \"15px\",\n        height: \"15px\",\n        objectFit: \"contain\",\n        background: \"none\",\n        // border: `1px solid ${palette.secondary.main}`,\n        // padding: '2px',\n        strokeOpacity: 0,\n        fill: \"none\",\n        fillOpacity: 0.5,\n        display: \"none\",\n\n        \"&: > svg\": {\n            strokeOpacity: 0,\n            fill: \"none\",\n            fillOpacity: 0.5\n        },\n        [breakpoints.up(\"md\")]: {\n            display: \"block\",\n            width: \"25px\",\n            height: \"25px\"\n        }\n    },\n    score: {\n        outline: 'none',\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#e0e0e0\",\n        width: \"20px\",\n        height: \"20px\",\n        border: 'none',\n        borderRadius: \"2px\",\n        margin: \"0 5px\",\n        textAlign: \"center\",\n        cursor: \"pointer\",\n        color: \"#000\",\n\n        [breakpoints.up(\"md\")]: {\n            fontSize: \"1rem\",\n            width: \"30px\",\n            height: \"30px\",\n          }\n    },\n    exactScore: {\n        backgroundColor: \"#39a350\"\n    },\n    correctScore: {\n        backgroundColor: \"#3c87b5\"\n    },\n    incorrectScore: {\n        backgroundColor: \"#c74c4c\"\n    },\n    span: {\n        color: \"#000\"\n    },\n    points: {\n        padding: \"5px\",\n        borderRadius: \"2px\",\n        backgroundColor: palette.secondary.dark,\n        color: \"#fff\"\n    },\n}))","/* eslint-disable react/prop-types */\nimport { Dialog, Typography, Box } from '@material-ui/core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { axios } from '../../axios/axios';\nimport { Actions as FetchAction, setIsFetchingContext } from '../../context/fetchingContext';\nimport { User } from '../../context/userContext';\nimport useStyles from './user-predictions-modal.styles';\nimport { Gameweek } from '../Standings/standings';\nimport { TeamsContext } from '../../context/teamsContext';\nimport classNames from 'classnames';\n\ntype Props = {\n    isOpen: boolean;\n    setIsOpen: (isOpen: boolean) => void;\n    player: User | null;\n    matchdayNumber?: number;\n}\n\ninterface GameweekWithPoints extends Gameweek {\n    points: number\n}\n\nconst UserPredictionsModal: React.FC<Props> = ({ isOpen, setIsOpen, player, matchdayNumber }) => {\n\n    const classes = useStyles();\n    const teams = useContext(TeamsContext);\n    const [userPredictions, setUserPredictions] = useState<GameweekWithPoints[]>([]);\n    const setFetching = useContext(setIsFetchingContext);\n        \n    const getUserPredictions = async () => {\n        setFetching({type: FetchAction.setIsFetching, payload: true});\n        try {\n            const userPredictionsResponse = await axios.post('/userPredictions', {id: player?.id} )\n            const predictions: Gameweek[] = userPredictionsResponse.data.userPredictions;\n            if (predictions) { \n                const gameweekData: GameweekWithPoints[] = [];\n\n                predictions.forEach((gameweek) => {\n                    const pointsAcquired: number = gameweek.matchPredictions.reduce((points: number, prediction) => {\n                        points += prediction.points\n                        return points\n                    }, 0\n                    )\n                    gameweekData.push({...gameweek, points: pointsAcquired})\n                });\n                gameweekData.sort((a,b) => b.gameweek - a.gameweek);\n                setUserPredictions(gameweekData);\n            }\n        } catch (error) {\n            console.log(error)\n        }\n        setFetching({type: FetchAction.setIsFetching, payload: false});\n    }\n\n    useEffect(() => {\n        if(isOpen) {\n            getUserPredictions();\n        }\n    },[isOpen])\n\n    const handleClose = () => {\n        setUserPredictions([]);\n        setIsOpen(false);\n    }\n\n    return(\n        <Dialog classes={{ paper: classes.dialogMain}} open={isOpen} onClose={handleClose}>\n            <Typography variant=\"h5\" component=\"h2\" className={classes.username}>{player?.username}</Typography>\n            <Box className={classes.userPredictions}>\n                {userPredictions.length > 0 ? \n                    <div className={classes.tableContainer}>\n                        {userPredictions.map((gameweek) => (\n                            <div className={classes.table} key={gameweek.id}>\n                                <div className={classes.title}>\n                                    <Typography>{\"Gameweek \" + gameweek.gameweek}</Typography>\n                                    <Typography className={classes.points}>{gameweek.points === 1 ? gameweek.points + \" point\" : gameweek.points + \" points\"}</Typography>\n                                </div>\n\n                                <div>\n                                    {gameweek.matchPredictions.map((prediction) => (\n                                        <div className={prediction.isBoosted ? classNames(classes.rowBoosted, classes.row) : classes.row} key={prediction.id}>\n                                            <img className={classes.crest} src={teams.find(team => team.name === prediction.homeTeamName)?.crestUrl} alt={prediction.homeTeamName}></img>\n                                            <div className={classes.teamName}>\n                                                <Typography className={classes.name} variant=\"body2\">{prediction.homeTeamName.substring(0, prediction.homeTeamName.length-3)}</Typography>\n                                            </div>\n                                            <div className={classes.scoreWrapper}>\n                                                <Typography className={prediction.isExactScore ? classNames(classes.exactScore, classes.score) : prediction.isCorrectScore ? classNames(classes.correctScore, classes.score) :  prediction.isResolved ? classNames(classes.incorrectScore, classes.score) : classes.score} variant=\"body2\">{prediction.homeTeamScore}</Typography>\n                                                <span className={classes.span}> : </span>\n                                                <Typography className={prediction.isExactScore ? classNames(classes.exactScore, classes.score) : prediction.isCorrectScore ? classNames(classes.correctScore, classes.score) :  prediction.isResolved ? classNames(classes.incorrectScore, classes.score) : classes.score} variant=\"body2\">{prediction.awayTeamScore}</Typography>\n                                            </div>\n                                            <div className={classes.teamName}>\n                                                <Typography className={classes.name} variant=\"body2\" style={{textAlign: \"right\"}}>{prediction.awayTeamName.substring(0, prediction.awayTeamName.length-3)}</Typography>\n                                            </div>\n                                            <img className={classes.crest} src={teams.find(team => team.name === prediction.awayTeamName)?.crestUrl} alt={prediction.homeTeamName}></img>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                :\n                    <Typography>No predictions yet...</Typography>\n                }\n            </Box>\n        </Dialog>\n    )\n}\n\nexport default UserPredictionsModal","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(({ palette, breakpoints }) => ({\n    dialogMain: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: \"5px\",\n        margin: \"32px\",\n        backgroundColor: palette.secondary.main,\n        color: \"#fff\",\n\n        [breakpoints.up(\"md\")]: {\n            minWidth: \"400px\"\n        },\n    },\n    title: {\n        width: \"100%\",\n        padding: \"10px\",\n        borderRadius: \"2px\",\n        backgroundColor: palette.secondary.dark,\n        textAlign: \"center\",\n        boxSizing: \"border-box\"\n    },\n    table: {\n        width: \"100%\",\n        tableLayout: \"fixed\"\n    },\n    tableRow: {\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\",\n\n        \"&:hover\": {\n            backgroundColor: \"#e0e0e0\"\n        }\n    },\n    tableHeadRow: {\n        backgroundColor: palette.secondary.light,\n        fontWeight: \"bolder\",\n    },\n}))","import React from 'react';\nimport { Dialog, Typography, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\nimport { User } from '../../context/userContext';\nimport useStyles from './standings-modal.styles';\n\ntype Props = {\n    isOpen: boolean,\n    setIsOpen: (isOpen: boolean) => void,\n    standings: User[]\n}\n\nconst StandingsModal: React.FC<Props> = ({ isOpen, setIsOpen, standings}) => {\n\n    const classes = useStyles();\n\n    return(\n        <Dialog classes={{ paper: classes.dialogMain}} open={isOpen} onClose={() => setIsOpen(false)}>\n            <Typography variant=\"h4\" component=\"h2\" className={classes.title}>Standings</Typography>\n            <TableContainer>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow className={classes.tableHeadRow}>\n                                <TableCell size=\"small\" style={{width: '50px'}}>\n                                    <Typography variant={'body1'}>P</Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant={'body1'}>Name</Typography>\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <Typography variant={'body1'}>Points</Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                            <TableBody>\n                                {standings.map((player, index) => (\n                                <TableRow key={player.id} className={classes.tableRow}>\n                                    <TableCell>\n                                        <Typography noWrap variant={'body1'}>\n                                            {index + 1}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography noWrap variant={'body1'}>\n                                            {player.username}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography variant={'body1'}>\n                                            {player.points}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            </TableBody>\n                    </Table>\n                </TableContainer>\n        </Dialog>\n    )\n}\n\nexport default StandingsModal;","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { AxiosResponse } from 'axios';\nimport { axios } from '../../axios/axios'\nimport React, { useContext, useEffect, useMemo, useState } from 'react';\nimport { format } from \"date-fns\"\nimport { User, UserContext } from '../../context/userContext';\nimport useStyles from './standings.styles';\nimport { Table, TableContainer, Typography, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core'\n// import { matchResults as mockResults} from '../../data/matchResults.js';\nimport { Actions as FetchAction } from '../../context/fetchingContext';\nimport { FixturesData, UserPrediction } from '../AppContent/app-content';\nimport UserPredictionsModal from '../UserPredictionsModal/user-predictions-modal';\nimport StandingsModal from '../StandingsModal/standings-modal';\nimport { isFetchingContext, setIsFetchingContext } from '../../context/fetchingContext';\nimport { PlayerActions, PlayersContext, PlayersDispatchContext } from '../../context/playersContext';\n\nexport interface UsersResponse extends AxiosResponse {\n    data: {\n        users: User[]\n    }\n}\n\nexport type Gameweek = {\n    id: number,\n    UserId: number,\n    seasonId: number\n    gameweek: number,\n    matchPredictions: UserPrediction[]\n    \n}\n\ntype Props = {\n    matchdayNumber: number;\n    seasonId: number | null;\n}\n\nconst Standings: React.FC<Props> = ({ matchdayNumber }) => {\n\n    const classes = useStyles();\n    const user = useContext(UserContext);\n    const isFetching = useContext(isFetchingContext);\n    const setFetching = useContext(setIsFetchingContext);\n    const players = useContext(PlayersContext);\n    const dispatchPlayers = useContext(PlayersDispatchContext);\n    // const [players, setPlayers] = useState<User[]>([]);\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const [isStandingsOpen, setIsStandingsOpen] = useState<boolean>(false);\n    const [player, setPlayer] = useState<User | null>(null);\n\n    const standings = useMemo(() => {\n        const playersToDisplay = players.sort((a,b) => b.points - a.points);\n        return playersToDisplay;\n    }, [players])\n\n    const getPlayers = async () => {\n        const usersResponse: UsersResponse = await axios.get('/users');\n        dispatchPlayers({type: PlayerActions.setUser, payload: usersResponse.data.users});\n    } \n\n    useEffect(() => {\n        getPlayers()\n    }, []);\n\n    const updateStandings = async () => {\n        if (!isFetching) {\n            try {\n                setFetching({type: FetchAction.setIsFetching, payload: true})\n\n                const currentDate = format(new Date(), 'yyyy-MM-dd');\n                const matchResultsResponse = await fetch(`https://api.football-data.org/v2/competitions/2021/matches?dateFrom=2021-08-01&dateTo=${currentDate}&status=FINISHED`, {\n                    headers: {\n                      'X-Auth-Token': 'd4a9110b90c6415bb3d252836a4bf034'\n                    },\n                    mode: 'cors'\n                });\n\n                const matchResults: FixturesData = await matchResultsResponse.json()\n        \n                const promises: Promise<any>[] = [];\n        \n                const gameweekPredictionsResponse = await axios.get('gameweekPredictions');\n                const gameweekPredictions: Gameweek[] = gameweekPredictionsResponse.data.gameweekPredictions;\n        \n                gameweekPredictions?.forEach((userGameweek: Gameweek) => {\n        \n                    let points = 0;\n        \n                    const predictionsToResolve = userGameweek.matchPredictions.filter(prediction => !prediction.isResolved);\n        \n                    if(predictionsToResolve?.length > 0) {\n                        predictionsToResolve.forEach((prediction) => {\n                            const matchResult = matchResults.matches?.find(match => match.id === prediction.matchId);\n                            const amplifierValue = prediction.isBoosted ? 1 : 0;\n                            let predictionToUpdate = {...prediction, isResolved: true};\n            \n                            if(matchResult && (matchResult?.score.fullTime.homeTeam !== null && matchResult?.score.fullTime.homeTeam !== undefined) && (matchResult?.score.fullTime.awayTeam !== null && matchResult?.score.fullTime.awayTeam !== undefined)) {\n                                if (prediction.homeTeamScore === matchResult.score.fullTime.homeTeam && prediction.awayTeamScore === matchResult.score.fullTime.awayTeam) {\n                                    points += 3 + 3 * amplifierValue;\n                                    predictionToUpdate = {...predictionToUpdate, isExactScore: true, isCorrectScore: true, points: 3 + 3 * amplifierValue}\n                                } else \n                                if ((prediction.homeTeamScore > prediction.awayTeamScore) && (matchResult.score.fullTime.homeTeam > matchResult.score.fullTime.awayTeam)) {\n                                    points += 1 + 1 * amplifierValue;\n                                    predictionToUpdate = {...predictionToUpdate, isExactScore: false, isCorrectScore: true, points: 1 + 1 * amplifierValue}\n                                } else \n                                if ((prediction.homeTeamScore === prediction.awayTeamScore) && (matchResult.score.fullTime.homeTeam === matchResult.score.fullTime.awayTeam)) {\n                                    points += 1 + 1 * amplifierValue;\n                                    predictionToUpdate = {...predictionToUpdate, isExactScore: false, isCorrectScore: true, points: 1 + 1 * amplifierValue}\n                                } else \n                                if ((prediction.homeTeamScore < prediction.awayTeamScore) && (matchResult.score.fullTime.homeTeam < matchResult.score.fullTime.awayTeam)) {\n                                    points += 1 + 1 * amplifierValue;\n                                    predictionToUpdate = {...predictionToUpdate, isExactScore: false, isCorrectScore: true, points: 1 + 1 * amplifierValue}\n                                } else {\n                                    predictionToUpdate = {...predictionToUpdate, isExactScore: false, isCorrectScore: false, points: 0}\n                                }\n                                promises.push(axios.put('/prediction', predictionToUpdate).catch(err => console.log(err)));\n                                \n                            }\n                        })\n                        promises.push(axios.put('/user', {UserId: userGameweek.UserId, points}).catch(err => console.log(err)));\n                    }   \n        \n                })\n    \n                await Promise.all(promises);\n                setFetching({type: FetchAction.setIsFetching, payload: false})\n            } catch (error) {\n                console.log(error)\n                setFetching({type: FetchAction.setIsFetching, payload: false})\n            }\n    \n            getPlayers();\n        } \n    }\n\n    const handleUserPredictions = (player: User) => {\n        if (user?.user) {\n            setPlayer(player);\n            setIsOpen(true);\n        }\n    }\n\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.tableContainer}>\n                <Typography className={classes.tableName} variant='body1'>Standings</Typography>\n                <TableContainer>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow className={classes.tableHeadRow}>\n                                <TableCell size=\"small\" style={{width: '50px'}}>\n                                    <Typography variant={'body1'}>P</Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant={'body1'}>Name</Typography>\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <Typography variant={'body1'}>Points</Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        {standings.length <= 10 ?\n                            <TableBody>\n                                {standings.map((player, index) => (\n                                <TableRow key={player.id} className={classes.tableRow} onClick={() => handleUserPredictions(player)} tabIndex={0} role=\"button\">\n                                    <TableCell>\n                                        <Typography noWrap variant={'body1'}>\n                                            {index + 1}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography noWrap variant={'body1'}>\n                                            {player.username}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography variant={'body1'}>\n                                            {player.points}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            </TableBody>\n                            :\n                            <TableBody>\n                            {standings.slice(0,10).map((player, index) => (\n                            <TableRow key={player.id} className={classes.tableRow} onClick={() => handleUserPredictions(player)} tabIndex={0} role=\"button\">\n                                <TableCell>\n                                    <Typography noWrap variant={'body1'}>\n                                        {index + 1}\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography noWrap variant={'body1'}>\n                                        {player.username}\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    <Typography variant={'body1'}>\n                                        {player.points}\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                            <TableRow className={classes.tableRow}>\n                                <TableCell variant=\"footer\" colSpan={3}>\n                                    <Typography variant={'body1'}>. . .</Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                        }\n                    </Table>\n                </TableContainer>\n            </div>\n            {standings.length > 10 &&\n                <Button className={classes.button} onClick={() => setIsStandingsOpen(true)}>\n                    Display all\n                </Button>\n            }\n            {user?.user?.role === \"Admin\" &&\n                <Button className={classes.button} onClick={updateStandings}>Update Standings</Button>\n            }\n            <UserPredictionsModal isOpen={isOpen} setIsOpen={setIsOpen} player={player} matchdayNumber={matchdayNumber} />\n            <StandingsModal isOpen={isStandingsOpen} setIsOpen={setIsStandingsOpen} standings={standings} />\n        </div>\n    );\n};\n\nexport default Standings;","import { Box, Typography } from '@material-ui/core';\nimport React, { useContext, useEffect, useMemo, useState, useCallback } from 'react';\nimport useStyles from './app-content.styles'\nimport { CurrentFixturesDispatchContext } from '../../context/currentFixturesContext';\nimport { Actions } from '../../context/currentFixturesContext';\nimport { Actions as FetchAction } from '../../context/fetchingContext';\nimport { Actions as UserAction } from '../../context/userContext';\nimport { TeamsContext } from '../../context/teamsContext';\nimport Fixtures from '../Fixtures/fixtures';\nimport Standings from '../Standings/standings';\nimport { UserContext, UserDispatchContext } from '../../context/userContext';\nimport { axios } from '../../axios/axios';\nimport { setIsFetchingContext } from '../../context/fetchingContext';\nimport { Actions as FetchingAction} from '../../context/fetchingContext';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\n\nexport type Fixture = {\n  id: number,\n  matchday?: number,\n  awayTeam: {\n    id: number,\n    name: string,\n    crestUrl?: string\n  },\n  homeTeam: {\n    id: number,\n    name: string,\n    crestUrl?: string\n  },\n  score: {\n    duration: string,\n    fullTime: {\n      homeTeam?: number | null,\n      awayTeam?: number | null\n    },\n    halfTime: {\n      homeTeam?: number | null,\n      awayTeam?: number | null\n    },\n    winner: number\n  },\n  season: {\n    currentMatchday: number,\n    id: number\n  },\n  prediction: {\n    homeTeamScore?: number | null,\n    awayTeamScore?: number | null\n  },\n  isSubmited: boolean\n  isResolved: boolean\n  isCorrectScore: boolean,\n  isExactScore: boolean,\n  isBoosted: boolean,\n  GameweekPredictionId: number,\n  status: string\n}\n\nexport type UserPrediction = {\n  id: number,\n  matchId: number,\n  GameweekPredictionId: number,\n  homeTeamName: string,\n  awayTeamName: string,\n  homeTeamScore: number,\n  awayTeamScore: number,\n  points: number,\n  isCorrectScore: boolean,\n  isExactScore: boolean,\n  isResolved: boolean,\n  isBoosted: boolean\n}\n\nexport type FixturesData = {\n  competition: {\n    id: number,\n    area: {\n      id: number,\n      name: string\n    },\n    code: string,\n  },\n  count: number,\n  matches: Fixture[]\n}\n\ntype TeamsData = {\n  teams: Team[]\n}\n\nexport type Team = {\n  address: string,\n  clubColors: string,\n  crestUrl: string,\n  email: string,\n  founded: number,\n  id: number,\n  name: string,\n  venue: string,\n  website: string\n}\n\ntype Props = {\n  setIsModalOpen: (isModalOpen: {isOpen: boolean, target: string}) => void\n}\n\n\n\n\nconst AppContent: React.FC<Props> = ({setIsModalOpen}) => {\n    const classes = useStyles();\n    const currentFixturesDispatch = useContext(CurrentFixturesDispatchContext);\n    const userState = useContext(UserContext);\n    const dispatchUser = useContext(UserDispatchContext);\n    const setFetching = useContext(setIsFetchingContext);\n    const [matchdayNumber, setMatchdayNumber] = useState<number>(0);\n    const [currentMatchday, setCurrentMatchday] = useState<number>(0);\n    const [seasonId, setSeasonId] = useState<number | null>(null);\n    const [teams, setTeams] = useState<Team[]>([]);\n    const [error, setError] = useState<string | null>(null);\n\n    const teamsProvider = useMemo(() => teams, [teams])\n\n    useEffect(() => {\n      const user = JSON.parse(localStorage.getItem('user') || 'null');\n      if(user) {\n        dispatchUser({type: UserAction.setUser, payload: user})\n      } else {\n        dispatchUser({type: UserAction.setUser, payload: undefined})\n      }\n    }, []);\n\n    const fetchData = useCallback(async (matchdayValue: number | null) => {\n      try {\n        setError(null);\n        setFetching({type: FetchingAction.setIsFetching, payload: true});\n\n        let matchdayToDisplay = matchdayValue;\n\n        if(!matchdayValue){\n          const scheduledMatchesResponse = await fetch(`https://api.football-data.org/v2/competitions/2021/matches?status=SCHEDULED`, {\n            headers: {\n              'X-Auth-Token': 'd4a9110b90c6415bb3d252836a4bf034'\n            },\n            mode: 'cors'\n          });\n          const scheduledMatchesData: FixturesData = await scheduledMatchesResponse.json();\n          setMatchdayNumber(scheduledMatchesData.matches[0]?.matchday ?? 0);\n          setCurrentMatchday(scheduledMatchesData.matches[0]?.matchday ?? 0);\n          matchdayToDisplay = scheduledMatchesData.matches[0]?.matchday ?? 0;\n        }\n\n        const currentMatchesResponse = await fetch(`https://api.football-data.org/v2/competitions/2021/matches`, {\n            headers: {\n              'X-Auth-Token': 'd4a9110b90c6415bb3d252836a4bf034'\n            },\n            mode: 'cors'\n        });\n        let currentMatchesData: FixturesData = await currentMatchesResponse.json();\n        currentMatchesData = {...currentMatchesData, matches: currentMatchesData.matches.filter(m => m.matchday === (matchdayToDisplay ?? matchdayNumber))};\n        if(matchdayToDisplay) {\n          setMatchdayNumber(matchdayToDisplay);\n        }\n          if (currentMatchesData.matches.length) {\n            const fixtures = currentMatchesData.matches.map((fixture)  => ({...fixture, prediction: {homeTeamScore: null, awayTeamScore: null}, isSubmited: false, isResolved: false, isBoosted: false}))\n            if(userState?.user?.id) {\n              const userGameweekPredictionsResponse = await axios.post('/userGameweek', {\n                UserId: userState?.user?.id,\n                gameweek: matchdayToDisplay ?? currentMatchesData.matches[0].matchday,\n                seasonId: currentMatchesData.matches[0].season.id\n            });\n            \n            if (userGameweekPredictionsResponse.data?.gameweek?.matchPredictions.length > 0){\n              const userPredictions: UserPrediction[] = userGameweekPredictionsResponse.data?.gameweek.matchPredictions\n  \n              const fixturesToDispatch: Fixture[] = fixtures.map((fixture) => {\n                const prediction = userPredictions.find(prediction => prediction.matchId === fixture.id );\n                if(prediction) {\n                  return {...fixture, \n                    prediction: {\n                      homeTeamScore: prediction.homeTeamScore, \n                      awayTeamScore: prediction.awayTeamScore\n                    },\n                    isSubmited: true,\n                    isResolved: prediction.isResolved,\n                    isExactScore: prediction.isExactScore,\n                    isCorrectScore: prediction.isCorrectScore,\n                    isBoosted: prediction.isBoosted,\n                    points: prediction.points,\n                    GameweekPredictionId: prediction.GameweekPredictionId,\n                  }\n                } else if (fixture.status !== \"SCHEDULED\" && fixture.status !== \"POSTPONED\") {\n                  return {...fixture, \n                    prediction: {\n                      homeTeamScore: null, \n                      awayTeamScore: null\n                    },\n                    isSubmited: true,\n                    isResolved: true,\n                    isBoosted: false,\n                  }\n                } else {\n                  return fixture\n                }\n              })\n                currentFixturesDispatch({type: Actions.setFixtures, payload: fixturesToDispatch});\n              } else {\n                const fixturesToDispatch: Fixture[] = fixtures.map((fixture) => {\n                  if (fixture.status !== \"SCHEDULED\" && fixture.status !== \"POSTPONED\") {\n                    return {...fixture, \n                      prediction: {\n                        homeTeamScore: null, \n                        awayTeamScore: null\n                      },\n                      isSubmited: true,\n                      isResolved: true,\n                      isBoosted: false,\n                    }\n                  } else {\n                    return fixture\n                  }\n                })\n                currentFixturesDispatch({type: Actions.setFixtures, payload: fixturesToDispatch});\n              }\n            }\n            \n            if(!seasonId) {\n              setSeasonId(fixtures[0].season.id);\n            }\n  \n            if (teams.length < 1) {\n              const teamsResponse = await fetch(`https://api.football-data.org/v2/competitions/2021/teams`, {\n                headers: {\n                  'X-Auth-Token': 'd4a9110b90c6415bb3d252836a4bf034'\n                },\n                mode: 'cors'\n              });\n              const teamsData: TeamsData = await teamsResponse.json()\n              const { teams } = teamsData;\n              setTeams(teams);\n            }     \n          }\n      } catch (error) {\n        console.log(error)\n        setError(\"Error. Try again in a minute...\");\n      }\n      setFetching({type: FetchAction.setIsFetching, payload: false});\n    },[userState, currentFixturesDispatch]);\n\n    useEffect(() => {\n      if (userState?.user) {\n        fetchData(matchdayNumber)\n      }\n\n    }, [userState?.user, fetchData])\n\n    return (\n        <Box className={classes.container}>\n              {error ?\n                <Typography variant=\"h5\" className={classes.error}>{error}</Typography>\n                :\n                <TeamsContext.Provider value={teamsProvider}>\n                <Box className={classes.mainContent}>\n                  <Fixtures \n                    setIsModalOpen={setIsModalOpen}\n                    matchdayNumber={matchdayNumber}\n                    seasonId={seasonId}\n                    fetchData={fetchData}\n                    currentMatchday={currentMatchday}\n                  />\n                  <Standings matchdayNumber={matchdayNumber} seasonId={seasonId}/>\n                </Box>\n                <Box className={classes.rulesContainer}>\n                  <Typography className={classes.rulesTitle} variant=\"h6\">Zasady</Typography>\n                    <ul className={classes.rulesList}>\n                      <li className={classes.rule}>\n                        <Typography >Wytypowanie dokładnego wyniku meczu - <span className={classes.accentGreen}>3 pkt</span></Typography>\n                      </li>\n                      <li className={classes.rule}>\n                        <Typography >Wytypowanie zwycięzcy (remisu) - <span className={classes.accentBlue}>1 pkt</span></Typography>\n                      </li>\n                      <li className={classes.rule}>\n                        <Typography className={classes.ruleText}>Boost <span className={classes.accent}><FlashOnIcon /></span> jest do wykorzystania w każdej kolejce i podwaja zdobyte punkty za dany typ</Typography>\n                      </li>\n                      <li className={classes.rule}>\n                        <Typography className={classes.ruleText}>By sprawdzić typy innego zawodnika, kliknij jego nazwę w tabeli</Typography>\n                      </li>\n                    </ul>\n                </Box>\n              </TeamsContext.Provider>\n              }           \n        </Box>\n    );\n};\n\nexport default AppContent;","import { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(({ palette, breakpoints }) => ({\n    modal: {\n        width: \"100%\",\n        backgroundColor: palette.secondary.dark,\n        border: `1px solid ${palette.secondary.main}`,\n        borderRadius: \"2px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        boxSizing: \"border-box\",\n        boxShadow: \"1px 1px 15px 3px #00000060\",\n\n        [breakpoints.up(\"md\")]: {\n            minWidth: \"400px\"\n        }\n    },\n    modalContent: {\n        padding: \"20px\",\n        width: \"80%\",\n        color: \"white\",\n        textAlign: \"center\"\n    },\n    validationMessage: {\n        color: palette.secondary.contrastText,\n        margin: \"10px 0\"\n    },\n    inputContainer: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"10px\",\n        textAlign: \"left\"\n    },\n    input: {\n        outline: \"none\",\n        borderRadius: \"2px\",\n        border: \"none\",\n        padding: \"5px\",\n        marginTop: \"5px\",\n        backgroundColor: palette.secondary.main,\n        color: \"#fff\",\n        fontSize: \"1.1rem\",\n        \"&:focus\": {\n            backgroundColor: palette.secondary.light\n        }\n    },\n    button: {\n        backgroundColor: \"#fff\",\n        marginTop: \"45px\",\n        width: \"100%\",\n        \"&:hover\": {\n            backgroundColor: \"#e0e0e0\"\n        }\n    }\n}));","import React, { useContext, useState } from 'react';\nimport { Button, Dialog, Typography } from '@material-ui/core';\nimport useStyles from './log-in-modal.styles';\nimport { axios } from '../../axios/axios'\nimport { Actions, User, UserDispatchContext } from '../../context/userContext';\nimport { Actions as FetchingAction} from '../../context/fetchingContext';\nimport { AxiosResponse } from 'axios';\nimport { PlayerActions, PlayersDispatchContext } from '../../context/playersContext';\nimport { UsersResponse } from '../Standings/standings';\nimport { isFetchingContext, setIsFetchingContext } from '../../context/fetchingContext';\n\ntype Props = {\n    isModalOpen: {isOpen: boolean, target: string},\n    setIsModalOpen: (isModalOpen: {isOpen: boolean, target: string}) => void\n}\n\nexport interface UserResponse extends AxiosResponse {\n  data: {\n    message: string,\n    isLoggedIn: boolean,\n    user?: User\n  }\n}\n\nconst LogInModal: React.FC<Props> = ({isModalOpen, setIsModalOpen}) => {\n\n  const classes = useStyles();\n  const [credentials, setCredentials] = useState<{login: string, password: string}>({login: '', password: ''})\n  const [validationMessage, setValidationMessage] = useState<string>('')\n  const dispatchUser = useContext(UserDispatchContext);\n  const dispatchPlayers = useContext(PlayersDispatchContext);\n  const isFetching = useContext(isFetchingContext);\n  const setFetching = useContext(setIsFetchingContext);\n\n  const handleClose = () => {\n    setIsModalOpen({...isModalOpen, isOpen: false});\n    setCredentials({login: '', password: ''});\n    setValidationMessage('');\n  }\n\n  const validateForm = () => {\n    const isEmpty = Object.values(credentials).some(input => input === '');\n    if (isEmpty) {\n      setValidationMessage('Please fill in all the required fields')\n      return false\n    } else {\n      setValidationMessage('')\n      return true\n    }\n  }\n\n  const handleRegister = async () => {\n    const isFormValid = validateForm();\n    if (isFormValid && !isFetching) {\n      try {\n        setFetching({type: FetchingAction.setIsFetching, payload: true});\n        const newUserResponse: UserResponse = await axios.post('/userCreate', {\n          username: credentials.login,\n          password: credentials.password,\n          role: \"User\"\n        })\n        const usersResponse: UsersResponse = await axios.get('/users');\n        dispatchPlayers({type: PlayerActions.setUser, payload: usersResponse.data.users});\n        setValidationMessage(newUserResponse.data.message);\n      } catch (error) {\n        console.log(error)\n        setFetching({type: FetchingAction.setIsFetching, payload: false})\n      }\n    }\n    setFetching({type: FetchingAction.setIsFetching, payload: false})\n  }\n\n  const handleLogIn = async () => {\n    const isFormValid = validateForm();\n    if (isFormValid && !isFetching) {\n      try {\n        setFetching({type: FetchingAction.setIsFetching, payload: true})\n        const userResponse: UserResponse = await axios.post('/user', {\n          username: credentials.login,\n          password: credentials.password\n        })\n        setValidationMessage(userResponse.data.message);\n        if (userResponse.data.user) {\n          dispatchUser({type: Actions.setUser, payload: userResponse.data.user})\n          localStorage.setItem('user', JSON.stringify(userResponse.data.user));\n          handleClose();\n        }\n\n      } catch (error) {\n        console.log(error)\n        setFetching({type: FetchingAction.setIsFetching, payload: false})\n      }\n    }\n    setFetching({type: FetchingAction.setIsFetching, payload: false})\n  }\n\n    return (\n        <Dialog\n        open={isModalOpen.isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        >\n          <div className={classes.modal}>\n            <div className={classes.modalContent}>\n              <Typography variant=\"body1\">{isModalOpen.target === 'register' ? 'Register Account' : 'Log In'}</Typography>\n              <Typography variant=\"body1\" className={classes.validationMessage}>{validationMessage}</Typography>\n              <div className={classes.inputContainer}>\n                <label>\n                Login\n                </label>\n                <input className = {classes.input} type=\"text\" value={credentials.login} onChange={(e) => setCredentials({...credentials, login: e.target.value})}></input>\n              </div>\n              <div className={classes.inputContainer}>\n                <label>\n                Password\n                </label>\n                <input className = {classes.input} type=\"password\" value={credentials.password} onChange={(e) => setCredentials({...credentials, password: e.target.value})}></input>\n              </div>\n              <Button className={classes.button} onClick={isModalOpen.target === 'register' ? handleRegister : handleLogIn}>{isModalOpen.target === 'register' ? 'Register' : 'Log In'}</Button>\n            </div>\n          </div>\n        </Dialog>\n    );\n};\n\nexport default LogInModal;","import React, { useState } from 'react';\nimport Header from './Header/header';\nimport AppContent from './AppContent/app-content';\nimport LogInModal from './LogInModal/log-in-modal';\nimport './app.scss';\nimport FetchingProvider from '../context/fetchingContext';\nimport { createMuiTheme, ThemeProvider, } from '@material-ui/core/styles';\nimport UserProvider from '../context/userContext';\nimport CurrentFixturesProvider from '../context/currentFixturesContext';\nimport PlayersProvider from '../context/playersContext';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#8e8e8e',\n      main: '#616161',\n      dark: '#373737',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#faa68d',\n      main: '#f88a62',\n      dark: '#f87c4f',\n      contrastText: '#000',\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Roboto', \n      'sans-serif'\n    ].join()\n  }\n});\n\n\nconst App: React.FC = () => {\n\nconst [isModalOpen, setIsModalOpen] = useState<{isOpen: boolean, target: string}>({isOpen: false, target: 'log-in'})\n\n  return (\n    <div className='app'>\n      <ThemeProvider theme={theme}>\n        <FetchingProvider>\n          <UserProvider >\n            <PlayersProvider>\n              <CurrentFixturesProvider>\n                <LogInModal isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen}/>\n                <Header setIsModalOpen={setIsModalOpen}/>\n                <AppContent setIsModalOpen={setIsModalOpen}/>\n              </CurrentFixturesProvider>\n            </PlayersProvider>\n          </UserProvider>\n        </FetchingProvider>\n      </ThemeProvider>\n      \n    </div>\n  );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}